<?php

/**
 * Implements hookinit().
 */
function custom_front_init() {
	if (variable_get('front_page_enable')) {
		global $user, $language;
		
		foreach ($user->roles as $rid => $role) {
			$lid = $language->language;
			$var = "front_page_path_{$rid}_{$lid}";		
			
			$path = variable_get($var, '');
			
			if ($path && drupal_is_front_page()) {
				drupal_goto($path);
			}
		}		
	}
}

/**
 * Implements hook_menu().
 */
function custom_front_menu() {
  $items['admin/config/custom-front'] = array(
    'title' => 'Custom front',
    'description' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_front_admin_form'),
    'access arguments' => array('administer front page'),
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
    'file' => 'custom_front.admin.inc',
    'weight' => 1,
  );
	
	return $items;
}

/**
 * Implements hook_theme().
 */
function custom_front_theme() {
  return array(
    'custom_front_admin_form' => array(
      'file' => 'custom_front.admin.inc',
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function custom_front_node_view($node, $view_mode, $langcode) {
	if ($node->type != 'page_tabs') return;
	
	$wrapper = entity_metadata_wrapper('node', $node);
	$enabled = $wrapper->field_tabs_enabled->value();	
	$tabs = &$node->content['field_tabs'];
	$links = array();
  
	foreach ($tabs['#items'] as $k => $v) {
		$markup = $tabs[$k]['entity']['field_collection_item'][$v['value']]['field_text'][0]['#markup'];
		$tabs[$k]['entity']['field_collection_item'][$v['value']]['field_text'][0]['#markup'] = html_entity_decode($markup);
		$tabs[$k]['entity']['field_collection_item'][$v['value']]['field_tab_title'][0]['#markup'] = html_entity_decode($markup);
	
		if (!$enabled) {
			$tabs[$k]['entity']['field_collection_item'][$v['value']]['field_text']['#weight'] = 0;
			$tabs[$k]['entity']['field_collection_item'][$v['value']]['field_tab_title']['#access'] = FALSE;
		} else {
      $link = render($tabs[$k]['entity']['field_collection_item'][$v['value']]['field_visuel']);
      $link .= render($tabs[$k]['entity']['field_collection_item'][$v['value']]['field_text']);
      $links[] = $link;   
    }
	}
  
  if ($enabled) {
    $node->content['tabs_links'][0]['#markup'] = theme('item_list', array('items' => $links));
  } else {
    hide($node->content['tabs_links']);
  }
  
  $hide_title = $wrapper->field_hide_title->value();
  if ($hide_title) {
    hide($node->content['title']);
  }
}

/**
 * Implements hook_ds_pre_render_alter().
 */
function custom_front_ds_pre_render_alter(&$layout_render_array, $context, &$vars) {
	if ($context['bundle'] != 'page_tabs') return;
	if ($context['view_mode'] != 'full') return;

	$wrapper = entity_metadata_wrapper('node', $context['entity']->nid);
	$enabled = $wrapper->field_tabs_enabled->value();		
	
	$vars['classes_array'][] = $enabled ? 'with-tabs' : 'without-tabs';

}